구조확인

import requests
import pandas as pd
import os
from dotenv import load_dotenv

# 1.네이버 개발자 api 접근을 위한 크롤링
dotenv_path = r"D:\Code\Python\pythonProject\.venv\KLP\naver.env"
load_dotenv(dotenv_path=dotenv_path)

# 2. 작성한 .env 파일에서 api 접근 권한 확보를 위한 정보 가져오기
client_id = os.getenv("CLIENT_ID")
client_secret = os.getenv("CLIENT_SECRET")

# 3.네이버 쇼핑 사이트 자체 크롤링이 금지되어있어 openapi를 호출해서 사용
url = "https://openapi.naver.com/v1/search/shop.json"
headers = {
    "X-Naver-Client-Id": client_id,
    "X-Naver-Client-Secret": client_secret
}

# 4.네이버쇼핑몰 ahc 정보 접근
params = {
    "query": "AHC",  # 검색할 키워드
    "display": 30,   # 가져올 결과 개수
    "sort": "sim"    # 정렬 방식: 유사도 순
}

# 5.API 요청 보내기
response = requests.get(url, headers=headers, params=params)

if response.status_code == 200:
    data = response.json()
    print("api 구조 :", data)
else:
    print(f"API 요청 실패: {response.status_code}")








크롤링
import requests
import pandas as pd
import os
from dotenv import load_dotenv
import re

# 1. 네이버 개발자 API 접근을 위한 크롤링
dotenv_path = r"D:\Code\Python\pythonProject\.venv\KLP\naver.env"
load_dotenv(dotenv_path=dotenv_path)

# 2. .env 파일에서 api 접근 권한 확보를 위한 정보 가져오기
client_id = os.getenv("CLIENT_ID")
client_secret = os.getenv("CLIENT_SECRET")

# 3. 네이버 쇼핑 사이트 자체 크롤링이 금지되어 있어 openapi를 호출해서 사용
url = "https://openapi.naver.com/v1/search/shop.json"
headers = {
    "X-Naver-Client-Id": client_id,
    "X-Naver-Client-Secret": client_secret
}
# 4. 네이버 쇼핑몰 ahc 정보 접근
params = {
    "query": "AHC",  # 검색할 키워드
    "display": 30,  # 가져올 결과 개수
    "sort": "sim"  # 정렬 방식: 유사도 순
}

# 5. API 요청 보내기
response = requests.get(url, headers=headers, params=params)

# 6. 응답 처리(API 요청이 성공했는지 확인하고 필요한 정보를 추출)
if response.status_code == 200:
    data = response.json()
    product_data = []

    for item in data["items"]:
        # 상품명 앞에 생기는 태그 제거
        title = re.sub(r"<.*?>", "", item["title"])

        # 상품가격 천원단위에 1,000 점찍기
        try:
            lprice = f"{int(item['lprice']):,}" if item["lprice"] else None
            hprice = f"{int(item['hprice']):,}" if item["hprice"] else None
        except ValueError:
            lprice, hprice = None, None

        product_data.append({
            "상품명": title,
            "정가": hprice,
            "판매가": lprice,
            "상품 링크 URL": item["link"],
            "대표 이미지 URL": item["image"],
            "상품별 옵션": None
        })

    # 7. 엑셀로 저장
    df = pd.DataFrame(product_data)
    df.to_excel("케이엘피 네이버 쇼핑 크롤링.xlsx", index=False)
    print("크롤링 성공")
else:
    print(f"API 요청 실패: {response.status_code}")
